{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Misha\\\\Desktop\\\\Code\\\\React\\\\goiteens-react-2020\\\\src\\\\components\\\\forms\\\\RegisterForm.js\";\nimport { Component } from 'react';\nimport { TextField, Button, Box, Typography } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport Spinner from '../Spinner';\nimport * as authOperations from '../../redux/auth/authOperations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  name: '',\n  email: '',\n  password: ''\n};\n\nclass RegisterForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = { ...initialState\n    };\n\n    this.handleChange = ({\n      target\n    }) => {\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.register(this.state);\n      this.setState({ ...initialState\n      });\n    };\n  }\n\n  render() {\n    const {\n      name,\n      email,\n      password\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          fullWidth: true,\n          label: \"Name\",\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Name\",\n          required: true,\n          value: name,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          fullWidth: true,\n          label: \"E-Mail\",\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"E-Mail\",\n          required: true,\n          value: email,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          fullWidth: true,\n          label: \"Password\",\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          required: true,\n          value: password,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = {\n  register: authOperations.register\n};\nexport default connect(bull, map)(RegisterForm);","map":{"version":3,"sources":["C:/Users/Misha/Desktop/Code/React/goiteens-react-2020/src/components/forms/RegisterForm.js"],"names":["Component","TextField","Button","Box","Typography","connect","Spinner","authOperations","initialState","name","email","password","RegisterForm","state","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","register","render","mapDispatchToProps","bull","map"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,UAAjC,QAAmD,mBAAnD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAO,KAAKC,cAAZ,MAAgC,iCAAhC;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,QAAQ,EAAE;AAHS,CAArB;;AAMA,MAAMC,YAAN,SAA2BZ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCa,KADmC,GAC3B,EACN,GAAGL;AADG,KAD2B;;AAAA,SAKnCM,YALmC,GAKpB,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAgB;AAC7B,YAAM;AAAEN,QAAAA,IAAF;AAAQO,QAAAA;AAAR,UAAkBD,MAAxB;AAEA,WAAKE,QAAL,CAAc;AACZ,SAACR,IAAD,GAAQO;AADI,OAAd;AAGD,KAXkC;;AAAA,SAanCE,YAbmC,GAanBC,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACC,cAAF;AAEA,WAAKC,KAAL,CAAWC,QAAX,CAAoB,KAAKT,KAAzB;AAEA,WAAKI,QAAL,CAAc,EACZ,GAAGT;AADS,OAAd;AAGD,KArBkC;AAAA;;AAuBnCe,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,QAA4B,KAAKE,KAAvC;AAEA,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKK,YAArB;AAAA,8BACE;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,OAAO,EAAC,UADV;AAEE,UAAA,MAAM,EAAC,QAFT;AAGE,UAAA,SAAS,MAHX;AAIE,UAAA,KAAK,EAAC,MAJR;AAKE,UAAA,IAAI,EAAC,MALP;AAME,UAAA,IAAI,EAAC,MANP;AAOE,UAAA,WAAW,EAAC,MAPd;AAQE,UAAA,QAAQ,MARV;AASE,UAAA,KAAK,EAAET,IATT;AAUE,UAAA,QAAQ,EAAE,KAAKK;AAVjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,OAAO,EAAC,UADV;AAEE,UAAA,MAAM,EAAC,QAFT;AAGE,UAAA,SAAS,MAHX;AAIE,UAAA,KAAK,EAAC,QAJR;AAKE,UAAA,IAAI,EAAC,OALP;AAME,UAAA,IAAI,EAAC,OANP;AAOE,UAAA,WAAW,EAAC,QAPd;AAQE,UAAA,QAAQ,MARV;AASE,UAAA,KAAK,EAAEJ,KATT;AAUE,UAAA,QAAQ,EAAE,KAAKI;AAVjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAfF,eA6BE;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,OAAO,EAAC,UADV;AAEE,UAAA,MAAM,EAAC,QAFT;AAGE,UAAA,SAAS,MAHX;AAIE,UAAA,KAAK,EAAC,UAJR;AAKE,UAAA,IAAI,EAAC,UALP;AAME,UAAA,IAAI,EAAC,UANP;AAOE,UAAA,WAAW,EAAC,UAPd;AAQE,UAAA,QAAQ,MARV;AASE,UAAA,KAAK,EAAEH,QATT;AAUE,UAAA,QAAQ,EAAE,KAAKG;AAVjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA7BF,eA4CE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAC,WAA9B;AAA0C,QAAA,KAAK,EAAC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5CF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmDD;;AA7EkC;;AAgFrC,MAAMU,kBAAkB,GAAG;AACzBF,EAAAA,QAAQ,EAAEf,cAAc,CAACe;AADA,CAA3B;AAIA,eAAejB,OAAO,CAAEoB,IAAF,EAAQC,GAAR,CAAP,CAAoBd,YAApB,CAAf","sourcesContent":["import { Component } from 'react';\r\nimport { TextField, Button, Box, Typography } from '@material-ui/core';\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../Spinner';\r\nimport * as authOperations from '../../redux/auth/authOperations'\r\nconst initialState = {\r\n  name: '',\r\n  email: '',\r\n  password: '',\r\n};\r\n\r\nclass RegisterForm extends Component {\r\n  state = {\r\n    ...initialState,\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.register(this.state);\r\n\r\n    this.setState({\r\n      ...initialState,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, password } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            label=\"Name\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Name\"\r\n            required\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            label=\"E-Mail\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"E-Mail\"\r\n            required\r\n            value={email}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            required\r\n            value={password}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          Register\r\n          {/* <Spinner loading={loading} /> */}\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  register: authOperations.register\r\n}\r\n\r\nexport default connect (bull, map)(RegisterForm);\r\n"]},"metadata":{},"sourceType":"module"}