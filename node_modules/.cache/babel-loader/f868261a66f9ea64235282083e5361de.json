{"ast":null,"code":"import { combineReducers, createAction, createReducer } from \"@reduxjs/toolkit\";\nimport * as actions from \"./authActions\";\nconst tokenReducer = createReducer(null, {\n  [actions.loginSuccess]: (state, action) => action.payload.token,\n  [actions.registerSuccess]: (state, action) => action.payload.token,\n  [actions.logoutSuccess]: () => null\n});\nconst defaultUserState = {\n  email: null,\n  name: null\n};\nconst userReducer = createReducer(defaultUserState, {\n  [actions.loginSuccess]: (state, action) => action.payload.token,\n  [actions.registerSuccess]: (state, action) => action.payload.token,\n  [actions.logoutSuccess]: () => null\n});\nexport default combineReducers({\n  token: tokenReducer\n});","map":{"version":3,"sources":["C:/Users/Misha/Desktop/Code/React/goiteens-react-2020/src/redux/auth/authReducer.js"],"names":["combineReducers","createAction","createReducer","actions","tokenReducer","loginSuccess","state","action","payload","token","registerSuccess","logoutSuccess","defaultUserState","email","name","userReducer"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,YAA1B,EAAwCC,aAAxC,QAA6D,kBAA7D;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;AACA,MAAMC,YAAY,GAAGF,aAAa,CAAC,IAAD,EAAO;AACvC,GAACC,OAAO,CAACE,YAAT,GAAwB,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC,OAAP,CAAeC,KADnB;AAEvC,GAACN,OAAO,CAACO,eAAT,GAA2B,CAACJ,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC,OAAP,CAAeC,KAFtB;AAGvC,GAACN,OAAO,CAACQ,aAAT,GAAyB,MAAM;AAHQ,CAAP,CAAlC;AAMA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,IADgB;AAEvBC,EAAAA,IAAI,EAAE;AAFiB,CAAzB;AAMA,MAAMC,WAAW,GAAGb,aAAa,CAACU,gBAAD,EAAmB;AAClD,GAACT,OAAO,CAACE,YAAT,GAAwB,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC,OAAP,CAAeC,KADR;AAElD,GAACN,OAAO,CAACO,eAAT,GAA2B,CAACJ,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC,OAAP,CAAeC,KAFX;AAIlD,GAACN,OAAO,CAACQ,aAAT,GAAyB,MAAM;AAJmB,CAAnB,CAAjC;AAQA,eAAeX,eAAe,CAAC;AAC7BS,EAAAA,KAAK,EAAEL;AADsB,CAAD,CAA9B","sourcesContent":["import { combineReducers, createAction, createReducer } from \"@reduxjs/toolkit\";\r\nimport * as actions from \"./authActions\";\r\nconst tokenReducer = createReducer(null, {\r\n  [actions.loginSuccess]: (state, action) => action.payload.token,\r\n  [actions.registerSuccess]: (state, action) => action.payload.token,\r\n  [actions.logoutSuccess]: () => null\r\n});\r\n\r\nconst defaultUserState = {\r\n  email: null,\r\n  name: null,\r\n}\r\n\r\n\r\nconst userReducer = createReducer(defaultUserState, {\r\n  [actions.loginSuccess]: (state, action) => action.payload.token,\r\n  [actions.registerSuccess]: (state, action) => action.payload.token,\r\n  \r\n  [actions.logoutSuccess]: () => null\r\n})\r\n\r\n\r\nexport default combineReducers({\r\n  token: tokenReducer,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}