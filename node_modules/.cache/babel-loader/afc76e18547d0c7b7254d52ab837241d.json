{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Misha\\\\Desktop\\\\Code\\\\React\\\\goiteens-react-2020\\\\src\\\\components\\\\routing\\\\PrivateRoute.js\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as authSelectors from \"../../redux/auth/authSelectors\";\nimport { urls } from \"../../routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PrivateRoute({\n  component: Component,\n  isAuthenticated,\n  ...otherProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Route, { ...otherProps,\n    children: props => {\n      return isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: urls.login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_c = PrivateRoute;\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.isAuthenticated(state)\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/Misha/Desktop/Code/React/goiteens-react-2020/src/components/routing/PrivateRoute.js"],"names":["Route","Redirect","connect","authSelectors","urls","PrivateRoute","component","Component","isAuthenticated","otherProps","props","login","mapStateToProps","state"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,KAAKC,aAAZ,MAA+B,gCAA/B;AAEA,SAASC,IAAT,QAAqB,cAArB;;;AAEA,SAASC,YAAT,CAAsB;AACpBC,EAAAA,SAAS,EAAEC,SADS;AAEpBC,EAAAA,eAFoB;AAGpB,KAAGC;AAHiB,CAAtB,EAIG;AACD,sBACE,QAAC,KAAD,OAAWA,UAAX;AAAA,cACIC,KAAD,IAAW;AACV,aAAOF,eAAe,gBACpB,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA,cADoB,gBAGpB,QAAC,QAAD;AAAU,QAAA,EAAE,EAAEN,IAAI,CAACO;AAAnB;AAAA;AAAA;AAAA;AAAA,cAHF;AAKD;AAPH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;KAhBQN,Y;;AAkBT,MAAMO,eAAe,GAAIC,KAAD,KAAY;AAClCL,EAAAA,eAAe,EAAEL,aAAa,CAACK,eAAd,CAA8BK,KAA9B;AADiB,CAAZ,CAAxB;;AAIA,eAAeX,OAAO,CAACU,eAAD,CAAP,CAAyBP,YAAzB,CAAf","sourcesContent":["import { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport * as authSelectors from \"../../redux/auth/authSelectors\";\r\n\r\nimport { urls } from \"../../routes\";\r\n\r\nfunction PrivateRoute({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...otherProps\r\n}) {\r\n  return (\r\n    <Route {...otherProps}>\r\n      {(props) => {\r\n        return isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={urls.login} />\r\n        );\r\n      }}\r\n    </Route>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n"]},"metadata":{},"sourceType":"module"}