{"ast":null,"code":"import { combineReducers, createAction, createReducer } from \"@reduxjs/toolkit\";\nimport * as actions from \"./authActions\";\nconst tokenReducer = createReducer(null, {\n  [actions.loginSuccess]: (state, action) => action.payload.token,\n  [actions.registerSuccess]: (state, action) => action.payload.token,\n  [actions.logoutSuccess]: () => null\n});\nconst defaultUserState = {\n  email: null,\n  name: null\n};\nconst userReducer = createReducer(defaultUserState, {\n  [actions.loginSuccess]: (state, action) => action.payload.user,\n  [actions.registerSuccess]: (state, action) => action.payload.user,\n  [actions.fetchUserDataSuccess]: (state, action) => action.payload,\n  [actions.logoutSuccess]: () => defaultUserState\n});\nconst loadingReducer = createReducer(false, {\n  // Fetch user data\n  [actions.fetchUserDataRequest]: () => true,\n  [actions.fetchUserDataSuccess]: () => false,\n  [actions.fetchUserDataError]: () => false,\n  // Login\n  [actions.loginRequest]: () => true,\n  [actions.loginSuccess]: () => false,\n  [actions.loginError]: () => false,\n  // Register\n  [actions.registerRequest]: () => true,\n  [actions.registerSuccess]: () => false,\n  [actions.registerError]: () => false,\n  // Logout\n  [actions.logoutRequest]: () => true,\n  [actions.logoutSuccess]: () => false,\n  [actions.logoutError]: () => false\n});\nexport default combineReducers({\n  token: tokenReducer,\n  user: userReducer,\n  loading: loadingReducer\n});","map":{"version":3,"sources":["C:/Users/Misha/Desktop/Code/React/goiteens-react-2020/src/redux/auth/authReducer.js"],"names":["combineReducers","createAction","createReducer","actions","tokenReducer","loginSuccess","state","action","payload","token","registerSuccess","logoutSuccess","defaultUserState","email","name","userReducer","user","fetchUserDataSuccess","loadingReducer","fetchUserDataRequest","fetchUserDataError","loginRequest","loginError","registerRequest","registerError","logoutRequest","logoutError","loading"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,YAA1B,EAAwCC,aAAxC,QAA6D,kBAA7D;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;AACA,MAAMC,YAAY,GAAGF,aAAa,CAAC,IAAD,EAAO;AACvC,GAACC,OAAO,CAACE,YAAT,GAAwB,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC,OAAP,CAAeC,KADnB;AAEvC,GAACN,OAAO,CAACO,eAAT,GAA2B,CAACJ,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC,OAAP,CAAeC,KAFtB;AAGvC,GAACN,OAAO,CAACQ,aAAT,GAAyB,MAAM;AAHQ,CAAP,CAAlC;AAMA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,IADgB;AAEvBC,EAAAA,IAAI,EAAE;AAFiB,CAAzB;AAKA,MAAMC,WAAW,GAAGb,aAAa,CAACU,gBAAD,EAAmB;AAClD,GAACT,OAAO,CAACE,YAAT,GAAwB,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC,OAAP,CAAeQ,IADR;AAElD,GAACb,OAAO,CAACO,eAAT,GAA2B,CAACJ,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC,OAAP,CAAeQ,IAFX;AAGlD,GAACb,OAAO,CAACc,oBAAT,GAAgC,CAACX,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC,OAHR;AAIlD,GAACL,OAAO,CAACQ,aAAT,GAAyB,MAAMC;AAJmB,CAAnB,CAAjC;AAOA,MAAMM,cAAc,GAAGhB,aAAa,CAAC,KAAD,EAAQ;AAC1C;AACA,GAACC,OAAO,CAACgB,oBAAT,GAAgC,MAAM,IAFI;AAG1C,GAAChB,OAAO,CAACc,oBAAT,GAAgC,MAAM,KAHI;AAI1C,GAACd,OAAO,CAACiB,kBAAT,GAA8B,MAAM,KAJM;AAK1C;AACA,GAACjB,OAAO,CAACkB,YAAT,GAAwB,MAAM,IANY;AAO1C,GAAClB,OAAO,CAACE,YAAT,GAAwB,MAAM,KAPY;AAQ1C,GAACF,OAAO,CAACmB,UAAT,GAAsB,MAAM,KARc;AAS1C;AACA,GAACnB,OAAO,CAACoB,eAAT,GAA2B,MAAM,IAVS;AAW1C,GAACpB,OAAO,CAACO,eAAT,GAA2B,MAAM,KAXS;AAY1C,GAACP,OAAO,CAACqB,aAAT,GAAyB,MAAM,KAZW;AAa1C;AACA,GAACrB,OAAO,CAACsB,aAAT,GAAyB,MAAM,IAdW;AAe1C,GAACtB,OAAO,CAACQ,aAAT,GAAyB,MAAM,KAfW;AAgB1C,GAACR,OAAO,CAACuB,WAAT,GAAuB,MAAM;AAhBa,CAAR,CAApC;AAmBA,eAAe1B,eAAe,CAAC;AAC7BS,EAAAA,KAAK,EAAEL,YADsB;AAE7BY,EAAAA,IAAI,EAAED,WAFuB;AAG7BY,EAAAA,OAAO,EAAET;AAHoB,CAAD,CAA9B","sourcesContent":["import { combineReducers, createAction, createReducer } from \"@reduxjs/toolkit\";\r\nimport * as actions from \"./authActions\";\r\nconst tokenReducer = createReducer(null, {\r\n  [actions.loginSuccess]: (state, action) => action.payload.token,\r\n  [actions.registerSuccess]: (state, action) => action.payload.token,\r\n  [actions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst defaultUserState = {\r\n  email: null,\r\n  name: null,\r\n};\r\n\r\nconst userReducer = createReducer(defaultUserState, {\r\n  [actions.loginSuccess]: (state, action) => action.payload.user,\r\n  [actions.registerSuccess]: (state, action) => action.payload.user,\r\n  [actions.fetchUserDataSuccess]: (state, action) => action.payload,\r\n  [actions.logoutSuccess]: () => defaultUserState,\r\n});\r\n\r\nconst loadingReducer = createReducer(false, {\r\n  // Fetch user data\r\n  [actions.fetchUserDataRequest]: () => true,\r\n  [actions.fetchUserDataSuccess]: () => false,\r\n  [actions.fetchUserDataError]: () => false,\r\n  // Login\r\n  [actions.loginRequest]: () => true,\r\n  [actions.loginSuccess]: () => false,\r\n  [actions.loginError]: () => false,\r\n  // Register\r\n  [actions.registerRequest]: () => true,\r\n  [actions.registerSuccess]: () => false,\r\n  [actions.registerError]: () => false,\r\n  // Logout\r\n  [actions.logoutRequest]: () => true,\r\n  [actions.logoutSuccess]: () => false,\r\n  [actions.logoutError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  token: tokenReducer,\r\n  user: userReducer,\r\n  loading: loadingReducer\r\n});\r\n"]},"metadata":{},"sourceType":"module"}