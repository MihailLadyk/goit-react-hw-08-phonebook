{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Misha\\\\Desktop\\\\Code\\\\React\\\\goiteens-react-2020\\\\src\\\\components\\\\forms\\\\CreateContactForm.js\";\nimport { Component } from 'react';\nimport { TextField, Button, Box, Typography } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport * as contactsOperations from '../../redux/contacts/contactsOperations';\nimport * as contactsSelectors from '../../redux/contacts/contactsSelectors';\nimport Spinner from '../Spinner';\nimport Message from '../Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  name: '',\n  number: ''\n};\n\nclass CreateContactForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = { ...initialState\n    };\n\n    this.handleChange = ({\n      target\n    }) => {\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.addContact(this.state);\n      this.setState({ ...initialState\n      });\n    };\n  }\n\n  render() {\n    const {\n      name,\n      number\n    } = this.state;\n    const {\n      loading,\n      error\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          fullWidth: true,\n          label: \"Name\",\n          autoComplete: \"off\",\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Name\",\n          required: true,\n          value: name,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          fullWidth: true,\n          autoComplete: \"off\",\n          label: \"Number\",\n          type: \"tel\",\n          name: \"number\",\n          placeholder: \"Number\",\n          required: true,\n          value: number,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        disabled: loading,\n        children: [\"Add Contact\", /*#__PURE__*/_jsxDEV(Spinner, {\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  loading: contactsSelectors.getLoading(state),\n  error: contactsSelectors.getError(state)\n});\n\nconst mapDispatchToProps = {\n  addContact: contactsOperations.addContact\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateContactForm);","map":{"version":3,"sources":["C:/Users/Misha/Desktop/Code/React/goiteens-react-2020/src/components/forms/CreateContactForm.js"],"names":["Component","TextField","Button","Box","Typography","connect","contactsOperations","contactsSelectors","Spinner","Message","initialState","name","number","CreateContactForm","state","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","addContact","render","loading","error","mapStateToProps","getLoading","getError","mapDispatchToProps"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\nimport { TextField, Button, Box, Typography } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as contactsOperations from '../../redux/contacts/contactsOperations';\r\nimport * as contactsSelectors from '../../redux/contacts/contactsSelectors';\r\n\r\nimport Spinner from '../Spinner';\r\nimport Message from '../Message';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass CreateContactForm extends Component {\r\n  state = {\r\n    ...initialState,\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.addContact(this.state);\r\n\r\n    this.setState({\r\n      ...initialState,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { loading, error } = this.props;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            label=\"Name\"\r\n            autoComplete=\"off\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Name\"\r\n            required\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            autoComplete=\"off\"\r\n            label=\"Number\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            placeholder=\"Number\"\r\n            required\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n\r\n        {error && <Message>Error</Message>}\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disabled={loading}\r\n        >\r\n          Add Contact\r\n          <Spinner loading={loading} />\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loading: contactsSelectors.getLoading(state),\r\n  error: contactsSelectors.getError(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addContact: contactsOperations.addContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateContactForm);\r\n"]},"metadata":{},"sourceType":"module"}