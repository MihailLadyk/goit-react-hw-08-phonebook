{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Misha\\\\Desktop\\\\Code\\\\React\\\\goiteens-react-2020\\\\src\\\\components\\\\routing\\\\PublicRoute.js\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as authSelectors from \"../../redux/auth/authSelectors\";\nimport { urls } from \"../../routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PublicRoute({\n  component: Component,\n  isAuthenticated,\n  ...otherProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Route, { ...otherProps,\n    children: props => {\n      return isAuthenticated && otherProps.restricted ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: urls.home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_c = PublicRoute;\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.isAuthenticated(state)\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"sources":["C:/Users/Misha/Desktop/Code/React/goiteens-react-2020/src/components/routing/PublicRoute.js"],"names":["Route","Redirect","connect","authSelectors","urls","PublicRoute","component","Component","isAuthenticated","otherProps","props","restricted","home","mapStateToProps","state"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,KAAKC,aAAZ,MAA+B,gCAA/B;AAEA,SAASC,IAAT,QAAqB,cAArB;;;AAEA,SAASC,WAAT,CAAqB;AACnBC,EAAAA,SAAS,EAAEC,SADQ;AAEnBC,EAAAA,eAFmB;AAGnB,KAAGC;AAHgB,CAArB,EAIG;AACD,sBACE,QAAC,KAAD,OAAWA,UAAX;AAAA,cACIC,KAAD,IAAW;AACV,aAAOF,eAAe,IAAKC,UAAU,CAACE,UAA/B,gBACP,QAAC,QAAD;AAAU,QAAA,EAAE,EAAEP,IAAI,CAACQ;AAAnB;AAAA;AAAA;AAAA;AAAA,cADO,gBAIH,QAAC,SAAD,OAAeF;AAAf;AAAA;AAAA;AAAA;AAAA,cAJJ;AAMD;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;KAjBQL,W;;AAmBT,MAAMQ,eAAe,GAAIC,KAAD,KAAY;AAClCN,EAAAA,eAAe,EAAEL,aAAa,CAACK,eAAd,CAA8BM,KAA9B;AADiB,CAAZ,CAAxB;;AAIA,eAAeZ,OAAO,CAACW,eAAD,CAAP,CAAyBR,WAAzB,CAAf","sourcesContent":["import { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport * as authSelectors from \"../../redux/auth/authSelectors\";\r\n\r\nimport { urls } from \"../../routes\";\r\n\r\nfunction PublicRoute({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...otherProps\r\n}) {\r\n  return (\r\n    <Route {...otherProps}>\r\n      {(props) => {\r\n        return isAuthenticated  && otherProps.restricted ? (\r\n        <Redirect to={urls.home} />\r\n     \r\n        ) : (\r\n            <Component {...props} />\r\n        );\r\n      }}\r\n    </Route>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n"]},"metadata":{},"sourceType":"module"}